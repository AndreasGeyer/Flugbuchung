package flugsuche.servlet;

import java.io.IOException;
import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Time;
import java.sql.Timestamp;
import java.sql.Types;
import java.util.Enumeration;
import java.util.List;

import javax.annotation.Resource;
import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import javax.sql.DataSource;

import flugsuche.bean.Buchung;
import flugsuche.bean.Buchungsposition;
import flugsuche.bean.Sitzplatz;
import flugsuche.bean.Zusatzleistung;

/**
 * Servlet implementation class ZahlungSpeichern
 */
@WebServlet("/ZahlungSpeichern")
public class ZahlungSpeichern extends HttpServlet {
	private static final long serialVersionUID = 1L;

	@Resource(lookup = "jdbc/__default")
	private DataSource ds;
	private Connection connection;

	/**
	 * @see HttpServlet#HttpServlet()
	 * Author Bauer Jürgen
	 */
	public ZahlungSpeichern() {
		super();
		// TODO Auto-generated constructor stub
	}

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse
	 *      response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {

		HttpSession session = request.getSession();
		try {
			connection = ds.getConnection();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		//Unterscheidung zwischen kreditkarte und Lastschrift

		Buchung buchung = (Buchung) session.getAttribute("Buchung");

		String iban = request.getParameter("iban");
		String bic = request.getParameter("bic");

		String kartennr = request.getParameter("kartennr");
		String prüfnr = request.getParameter("preufnr");

		if (iban == null) {
			buchung.setZahlungsart("Kreditkarte");
			buchung.setZahlungsnummer(kartennr + "_" + prüfnr);

		} else {
			buchung.setZahlungsart("Lastschrift");
			buchung.setZahlungsnummer(iban + "_" + bic);
		}

		insertBuchung(buchung);
		session.setAttribute("buchung", buchung);
		response.sendRedirect(request.getContextPath() + "/BestaetigungLaden");
		//RequestDispatcher dispatcher = request.getRequestDispatcher(request.getContextPath() + "BestaetigungLaden");
		//dispatcher.forward(request, response);

	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse
	 *      response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		// TODO Auto-generated method stub
		doGet(request, response);
	}
	//Speicherung der Buchung
	private void insertBuchung(Buchung buchung) {

		String sql = "INSERT INTO buchung (zeitstempel,fk_kunde,Zahlungsart,Zahlungsnummer)   VALUES(?,?,?,?)";
		String[] generatedKeys = { "buchungid" };
		try {
			PreparedStatement preparedStatement = connection.prepareStatement(sql, generatedKeys);
			// preparedStatement.setInt(1, buchung.getId());
			preparedStatement.setTimestamp(1, new Timestamp(System.currentTimeMillis()));
			preparedStatement.setInt(2, buchung.getKunde().getId());
			preparedStatement.setString(3, buchung.getZahlungsart());
			preparedStatement.setString(4, buchung.getZahlungsnummer());

			preparedStatement.executeUpdate();

			ResultSet result = preparedStatement.getGeneratedKeys();

			result.next();
			int autoGeneratedID = result.getInt(1);

			buchung.setId(autoGeneratedID);
			insertBuchungsposition(buchung);

		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}
	//Speicherung der Buchungsposition
	private void insertBuchungsposition(Buchung buchung) {

		List<Buchungsposition> positionen = buchung.getPositionen();
		int counter = 1;
		for (Buchungsposition pos : positionen) {

			String sql = "INSERT INTO buchungsposition (buchungsid, fk_flug, fk_zusatzleistung, passagierVorname, passagierNachname, geburtsdatum, preis,positionid, fk_sitzplatz) VALUES(?,?,?,?,?,?,?,?,?)";

			try {
				PreparedStatement preparedStatement = connection.prepareStatement(sql);
				preparedStatement.setInt(1, buchung.getId());
				preparedStatement.setInt(2, pos.getFlug().getId());
				if (pos.getZusatzleistung() != null)
					preparedStatement.setInt(3, pos.getZusatzleistung().getId());
				else
					preparedStatement.setNull(3, Types.INTEGER);

				preparedStatement.setString(4, pos.getPassagierVorname());
				preparedStatement.setString(5, pos.getPassagierNachname());

				if (pos.getGeburtsdatum() != null)
					preparedStatement.setDate(6, new Date(pos.getGeburtsdatum().getTime()));
				else
					preparedStatement.setNull(6, Types.TIMESTAMP);

				preparedStatement.setDouble(7, pos.getPreis());
				preparedStatement.setInt(8, counter++);

				if (pos.getSitzplatz() != null) {
					insertSitzplatz(pos.getSitzplatz());
					preparedStatement.setInt(9, pos.getSitzplatz().getId());
				} else
					preparedStatement.setNull(9, Types.INTEGER);
				
				System.out.println(preparedStatement.toString());
				preparedStatement.executeUpdate();

/*				ResultSet result = preparedStatement.getGeneratedKeys();

				result.next();
				int autoGeneratedID = result.getInt(1);

				pos.setPositionid(autoGeneratedID);*/

			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}

	}
	//Speicherung des Sitzplatzes
	private void insertSitzplatz(Sitzplatz platz) {

		String sql = "INSERT INTO sitzplatz (sitzplatzid,istFirstClass,status,fk_flug)   VALUES(?,?,?,?)";
		try {
			PreparedStatement preparedStatement = connection.prepareStatement(sql);

			preparedStatement.setInt(1, platz.getId());
			preparedStatement.setBoolean(2, platz.isFirstClass());
			preparedStatement.setString(3, platz.getStatus());
			preparedStatement.setInt(4, platz.getFlug().getId());

			preparedStatement.executeUpdate();

		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}

}
